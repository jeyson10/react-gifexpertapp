{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GiftGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GifGrid","category","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","props","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAIzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OAEI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IAC5BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAmBO,OACpCN,EAAc,MAMd,SAEA,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBkB,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCPjBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAAM,4FAA4FC,UAAUH,GAF/F,SAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAVtB,kBAeZM,GAfY,4CAAH,sDCDPO,EAAe,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAKnC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCLHO,EAAU,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAEpB,ECHuB,SAAEA,GAC1B,MAA0BlC,mBAAS,CAC/BqB,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAwBA,OAnBAC,qBAAW,WAEPzB,EAASqB,GACRK,MAAK,SAAAC,GAGEH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAOtB,CAACD,IAIGE,EDtB2BK,CAAaP,GAAjCP,EAAb,EAAQN,KAAac,EAArB,EAAqBA,QAKtB,OACI,qCACA,6BAAKD,IAEHC,GAAW,mBAAGL,UAAU,mCAAb,wBAEd,qBAAKA,UAAU,YAAf,SAIiBH,EAAOJ,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAEKA,GADCA,EAAIC,aEetBiB,EAlCM,SAAAC,GAGjB,MAAoC3C,mBAAS,CAAC,WAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAUA,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACI,6BAEQ6C,EAAWrB,KAAI,SAACW,GAAD,OAEf,cAAC,EAAD,CAEAA,SAAUA,GADLA,YCrB7BW,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.175d49f8.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n   \r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n       setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        //alert('Submit hecho');\r\n        if(inputValue.trim().length>2){\r\n        setCategories(cat => [inputValue,...cat]);\r\n        setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n\r\n        <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n\r\n        </form>\r\n\r\n  \r\n    )\r\n\r\n    \r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n\r\n}\r\n\r\n\r\n","\r\n\r\n\r\nexport const getGifs = async(categoria) =>{\r\n\r\n    const url = 'https://api.giphy.com/v1/gifs/search?api_key=kswQ1dOH969cNEXaKtlW5cGzrgAwrhXf&limit=10&q='+encodeURI(categoria);\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    //console.log(gifs);\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GiftGridItem = ({id,title,url}) => {\r\n\r\n   \r\n\r\n\r\n    return (\r\n        <div className='card animate__animated animate__bounce'>\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GiftGridItem } from './GiftGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n     const { data:images, loading } = useFetchGifs(category);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n\r\n        { loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n\r\n       <div className=\"card-grid\">\r\n            \r\n              \r\n                    {\r\n                        images.map(img =>\r\n                           <GiftGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                            \r\n                            />\r\n                            \r\n                        )\r\n                    }\r\n              \r\n            </div>\r\n     \r\n\r\n            </>\r\n    )\r\n}\r\n","import {useState,useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( ()=>{\r\n\r\n        getGifs( category )\r\n        .then(imgs => {\r\n\r\n\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false                \r\n                });\r\n\r\n\r\n          \r\n        })\r\n\r\n    }, [category])\r\n\r\n\r\n\r\n    return state;\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n//import PropTypes from 'prop-types'\r\n\r\nconst GifExpertApp = props => {\r\n\r\n    \r\n    const [categories, setCategories] = useState(['Naruto']);\r\n/*\r\n    const handleAdd = (e) =>{\r\n     \r\n        setCategories([...categories,'Hunter']);\r\n\r\n    }\r\n*/\r\n \r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n                <ol>\r\n                    {\r\n                        categories.map((category) =>\r\n\r\n                        <GifGrid \r\n                        key={category}\r\n                        category={category} />\r\n\r\n                        )}\r\n                </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}